{"version":3,"file":"bundle.js","mappings":"mBAAO,ICAIA,EAAgB,SAAUC,EAAMC,GA8DvC,IA7DA,IAwCIC,EAAWC,EAxCXC,EAAgB,GAChBC,EAAkB,GAClBC,EAAQ,CACR,WACA,YACA,aACA,YACA,cACA,eACA,gBACA,eACA,YACA,aACA,cACA,aACA,aACA,cACA,eACA,cACA,UACA,WACA,SACA,SACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,YAGAC,EAAa,WACbL,EAAYM,KAAKC,MACjBN,EAAWO,aAAY,WACnB,IAAIC,EAAcC,KAAKC,OAAOL,KAAKC,MAAQP,GAAa,KACpDY,EAAMF,KAAKC,MAAMF,EAAc,IAC9BI,WACAC,SAAS,EAAG,KACbC,GAAON,EAAc,IAAII,WAAWC,SAAS,EAAG,KAChDE,EAAO,GAAGC,OAAOL,EAAK,KAAKK,OAAOF,GACtCG,SAASC,cAAc,eAAeC,UAAYJ,CACtD,GAAG,IACP,EACIK,EAAY,WACZC,cAAcrB,EAClB,EAMSsB,EAAI,EAAGA,EAAIxB,EAAYwB,IAAK,CACjC,IAAIC,EAAapB,EAAMM,KAAKC,MAAMD,KAAKe,SAAWrB,EAAMsB,SACxDxB,GAAiB,wDAA2De,OAAOM,EAAG,mCAAqCN,OAAOO,EAAY,eAAiBP,OAAOO,EAAY,oCAClLrB,GAAmB,wDAA2Dc,OAAOM,EAAG,oCACxFnB,EAAMuB,OAAOvB,EAAMwB,QAAQJ,GAAa,EAC5C,CACA,IAAIK,EAAa,uWACbC,EAAc,sCAAwCb,OAAOY,EAAY,kDAAoDZ,OAAOd,EAAiB,8BACrJ4B,EAAY,sCAAwCd,OAAOY,EAAY,kDAAoDZ,OAAOf,EAAe,8BACrJJ,EAAKsB,UAAYW,EACjB1B,IACA2B,YAAW,WACP,IAAIC,EACJnC,EAAKsB,UAAYU,EACgC,QAAhDG,EAAKf,SAASC,cAAc,sBAAmC,IAAPc,GAAyBA,EAAGC,iBAAiB,SAAS,WAlB/Gb,IACAH,SAASC,cAAc,eAAeC,UAAY,QAClDf,IAkBIR,EAAcC,EAAMC,EACxB,IACA,IAAIoC,EAAejB,SAASkB,iBAAiB,wBACzCC,EAAe,KACfC,EAAoB,EACxBH,EAAaI,SAAQ,SAAUC,GAC3BA,EAAKN,iBAAiB,SAAS,SAAUO,GACrC,IAAIR,EACAS,EAAcD,EAAME,cACpBC,EAAYF,EAAYG,aAAa,cACrCC,EAAe1C,EAAM2C,OAAOH,IAEhC,GADAF,EAAYtB,UAAY,oCAAqCH,OAAO6B,EAAc,eAAiB7B,OAAO6B,EAAc,kBACnG,OAAjBT,EACAA,EAAeK,MAEd,CACD,IAAIM,EAAoBX,EAAaQ,aAAa,cAC9CI,EAAoB7C,EAAM2C,OAAOC,IACrC,GAAIF,EAAa,KAAOG,EAAkB,GAKtC,GAJAZ,EAAaa,oBAAoB,SAAS,WAAc,IACxDR,EAAYQ,oBAAoB,SAAS,WAAc,IACvDb,EAAe,OACfC,GAC0BvC,EAAa,EAAG,CACtCsB,IACA,IAAIL,EAAwD,QAAhDiB,EAAKf,SAASC,cAAc,sBAAmC,IAAPc,OAAgB,EAASA,EAAGb,UAC5F+B,EAAc,8VAA0elC,OAAOD,EAAM,qKACzgBlB,EAAKsB,UAAY+B,EACjB,IAAIC,EAAclC,SAASC,cAAc,yBACrCiC,EACAA,EAAYlB,iBAAiB,SAAS,WAClCrC,EAAcC,EAAMC,EACxB,IAGAsD,QAAQC,IAAI,2BAEpB,MAEItB,YAAW,WACPU,EAAYtB,UAAY,GACxBiB,EAAajB,UAAY,EAC7B,GAAG,IAGf,CACJ,GACJ,GACJ,GAAG,IACP,EC5HItB,EAAOoB,SAASqC,eAAe,SFHN,SAAUzD,GAEnCA,EAAKsB,UADe,iyBAExB,CEEIoC,CAAgB1D,GAQpB,IAAI2D,EAAiBvC,SAASC,cAAc,gBACxCuC,EAAWxC,SAASC,cAAc,UACtC,GAAuB,OAAnBsC,EAAyB,CACzBA,EAAevB,iBAAiB,UATjB,SAAUO,GACzBA,EAAMkB,iBACN,IAAIC,EAAQ1C,SAASC,cAAc,+BAA+B0C,MAClEhE,EAAcC,EAAMgE,SAASF,GACjC,IAMIH,EAAevB,iBAAiB,SAAS,WACpB,OAAbwB,IACAA,EAASK,SAA2E,KAAhE7C,SAASC,cAAc,+BAA+B0C,MAElF,IACA,IAAIG,EAAU,EACG,OAAbN,GACAA,EAASxB,iBAAiB,SAAS,WAEf,KADhB8B,EAAUF,SAAS5C,SAASC,cAAc,+BAA+B0C,QAErEhE,EAAcC,EAAM,GAEH,IAAZkE,EACLnE,EAAcC,EAAM,IAEH,IAAZkE,GACLnE,EAAcC,EAAM,GAE5B,GAER,C","sources":["webpack://game-card/./textWindowLevel.ts","webpack://game-card/./stLevel.ts","webpack://game-card/./game-card.ts"],"sourcesContent":["export var renderTextLevel = function (game) {\n    var textLevelHtml = \"<div class=\\\"level__container\\\">\\n        <h2 class=\\\"level__text\\\">\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C</h2>\\n        <form class=\\\"level__form\\\">\\n            <div class=\\\"level__value-gap\\\">\\n                <label class=\\\"level__value\\\">\\n                    <input type=\\\"radio\\\" name=\\\"level\\\" value=\\\"1\\\">\\n                    <span>1</span>\\n                </label>\\n                <label class=\\\"level__value\\\">\\n                    <input type=\\\"radio\\\" name=\\\"level\\\" value=\\\"2\\\">\\n                    <span>2</span>\\n                </label>\\n                <label class=\\\"level__value\\\">\\n                    <input type=\\\"radio\\\" name=\\\"level\\\" value=\\\"3\\\">\\n                    <span>3</span>\\n                </label>\\n            </div>\\n            <button disabled=\\\"true\\\" class=\\\"start\\\">\\u0421\\u0442\\u0430\\u0440\\u0442</button>\\n        </form>\\n    </div>\";\n    game.innerHTML = textLevelHtml;\n};\n","export var renderstLevel = function (game, cardsCount) {\n    var openCardsHtml = '';\n    var closedCardsHtml = '';\n    var cards = [\n        'туз пики',\n        'туз черви',\n        'туз крести',\n        'туз бубны',\n        'король пики',\n        'король черви',\n        'король крести',\n        'король бубны',\n        'дама пики',\n        'дама черви',\n        'дама крести',\n        'дама бубны',\n        'валет пики',\n        'валет черви',\n        'валет крести',\n        'валет бубны',\n        '10 пики',\n        '10 бубны',\n        '9 пики',\n        '7 пики',\n        '6 пики',\n        '10 черви',\n        '9 черви',\n        '8 черви',\n        '7 черви',\n        '10 черви',\n        '6 черви',\n        '9 бубны',\n        '8 бубны',\n        '7 бубны',\n        '6 бубны',\n        '10 крести',\n        '9 крести',\n        '8 крести',\n        '7 крести',\n        '6 крести',\n    ];\n    var startTime, interval;\n    var startTimer = function () {\n        startTime = Date.now();\n        interval = setInterval(function () {\n            var elapsedTime = Math.floor((Date.now() - startTime) / 1000);\n            var min = Math.floor(elapsedTime / 60)\n                .toString()\n                .padStart(2, \"0\");\n            var sec = (elapsedTime % 60).toString().padStart(2, \"0\");\n            var time = \"\".concat(min, \":\").concat(sec);\n            document.querySelector(\".game__time\").innerHTML = time;\n        }, 1000);\n    };\n    var stopTimer = function () {\n        clearInterval(interval);\n    };\n    var resetTimer = function () {\n        stopTimer();\n        document.querySelector(\".game__time\").innerHTML = \"00:00\";\n        startTimer();\n    };\n    for (var i = 0; i < cardsCount; i++) {\n        var randomCard = cards[Math.floor(Math.random() * cards.length)];\n        openCardsHtml += \"\\n      <div class=\\\"game-go__cards-item\\\" data-index=\\\"\".concat(i, \"\\\">\\n        <img src=\\\"./images/\").concat(randomCard, \".png\\\" alt=\\\"\").concat(randomCard, \"\\\">\\n        \\n      </div>\\n    \");\n        closedCardsHtml += \"\\n      <div class=\\\"game-go__cards-item\\\" data-index=\\\"\".concat(i, \"\\\">\\n        \\n      </div>\\n    \");\n        cards.splice(cards.indexOf(randomCard), 1);\n    }\n    var gameHeader = \"\\n      <div class=\\\"game__header\\\">\\n        <div class=\\\"game__time-box\\\">\\n          <div class=\\\"game__text-box\\\">\\n            <p class=\\\"game__text\\\">min</p>\\n            <p class=\\\"game__text\\\">sek</p>\\n          </div>\\n          <div class=\\\"game__time\\\"> </div>\\n        </div>\\n        <button class=\\\"buttonOver\\\"> \\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E </button>\\n      </div>\\n    \";\n    var closedCards = \"\\n    <div class=\\\"game-go\\\">\\n      \".concat(gameHeader, \"\\n      <div class=\\\"game-go__cards\\\">\\n        \").concat(closedCardsHtml, \"\\n      </div>\\n    </div>\");\n    var openCards = \"\\n    <div class=\\\"game-go\\\">\\n      \".concat(gameHeader, \"\\n      <div class=\\\"game-go__cards\\\">\\n        \").concat(openCardsHtml, \"\\n      </div>\\n    </div>\");\n    game.innerHTML = openCards;\n    startTimer();\n    setTimeout(function () {\n        var _a;\n        game.innerHTML = closedCards;\n        (_a = document.querySelector('.buttonOver')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', function () {\n            resetTimer();\n            renderstLevel(game, cardsCount);\n        });\n        var cardElements = document.querySelectorAll('.game-go__cards-item');\n        var previousCard = null;\n        var matchedCardsCount = 0;\n        cardElements.forEach(function (card) {\n            card.addEventListener('click', function (event) {\n                var _a;\n                var clickedCard = event.currentTarget;\n                var cardIndex = clickedCard.getAttribute('data-index');\n                var selectedCard = cards[Number(cardIndex)];\n                clickedCard.innerHTML = \"\\n            <img src=\\\"./images/\".concat(selectedCard, \".png\\\" alt=\\\"\").concat(selectedCard, \"\\\">\\n          \");\n                if (previousCard === null) {\n                    previousCard = clickedCard;\n                }\n                else {\n                    var previousCardIndex = previousCard.getAttribute('data-index');\n                    var previousCardValue = cards[Number(previousCardIndex)];\n                    if (selectedCard[0] === previousCardValue[0]) {\n                        previousCard.removeEventListener('click', function () { });\n                        clickedCard.removeEventListener('click', function () { });\n                        previousCard = null;\n                        matchedCardsCount++;\n                        if (matchedCardsCount === cardsCount / 2) {\n                            stopTimer();\n                            var time = (_a = document.querySelector('.game__time')) === null || _a === void 0 ? void 0 : _a.innerHTML;\n                            var resultTable = \"\\n                  <div class=\\\"result\\\">\\n                    <div class=\\\"result-table\\\">\\n                      <img src=\\\"./images/win.png\\\" alt='win'>\\n                      <h2 class=\\\"result__status\\\"> \\u0412\\u044B \\u0432\\u044B\\u0438\\u0433\\u0440\\u0430\\u043B\\u0438!</h2>\\n                      <p class =\\\"result__time-text\\\">\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F </p>\\n                      <p class = \\\"result__time\\\">\".concat(time, \"</p>\\n                      <button class=\\\"result__button_again\\\"> \\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E </button>\\n                    </div>\\n                  </div>\\n                \");\n                            game.innerHTML = resultTable;\n                            var againButton = document.querySelector('.result__button_again');\n                            if (againButton) {\n                                againButton.addEventListener('click', function () {\n                                    renderstLevel(game, cardsCount);\n                                });\n                            }\n                            else {\n                                console.log('againButton is not found');\n                            }\n                        }\n                        else {\n                            setTimeout(function () {\n                                clickedCard.innerHTML = '';\n                                previousCard.innerHTML = '';\n                            }, 1000);\n                        }\n                    }\n                }\n            });\n        });\n    }, 2000);\n};\n","import { renderTextLevel } from './textWindowLevel';\nimport { renderstLevel } from './stLevel';\nimport './style.css';\nvar game = document.getElementById('game');\nvar renderGame = function () {\n    renderTextLevel(game);\n};\nvar handleSubmit = function (event) {\n    event.preventDefault();\n    var level = document.querySelector('input[name=\"level\"]:checked').value;\n    renderstLevel(game, parseInt(level));\n};\nrenderGame();\nvar formHelloLevel = document.querySelector('.level__form');\nvar btnStart = document.querySelector('.start');\nif (formHelloLevel !== null) {\n    formHelloLevel.addEventListener('submit', handleSubmit);\n    formHelloLevel.addEventListener('input', function () {\n        if (btnStart !== null) {\n            btnStart.disabled = document.querySelector('input[name=\"level\"]:checked').value === '';\n        }\n    });\n    var level_1 = 0;\n    if (btnStart !== null) {\n        btnStart.addEventListener('click', function () {\n            level_1 = parseInt(document.querySelector('input[name=\"level\"]:checked').value);\n            if (level_1 === 1) {\n                renderstLevel(game, 6);\n            }\n            else if (level_1 === 2) {\n                renderstLevel(game, 12);\n            }\n            else if (level_1 === 3) {\n                renderstLevel(game, 16);\n            }\n        });\n    }\n}\n"],"names":["renderstLevel","game","cardsCount","startTime","interval","openCardsHtml","closedCardsHtml","cards","startTimer","Date","now","setInterval","elapsedTime","Math","floor","min","toString","padStart","sec","time","concat","document","querySelector","innerHTML","stopTimer","clearInterval","i","randomCard","random","length","splice","indexOf","gameHeader","closedCards","openCards","setTimeout","_a","addEventListener","cardElements","querySelectorAll","previousCard","matchedCardsCount","forEach","card","event","clickedCard","currentTarget","cardIndex","getAttribute","selectedCard","Number","previousCardIndex","previousCardValue","removeEventListener","resultTable","againButton","console","log","getElementById","renderTextLevel","formHelloLevel","btnStart","preventDefault","level","value","parseInt","disabled","level_1"],"sourceRoot":""}